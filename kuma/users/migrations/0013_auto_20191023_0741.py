# Generated by Django 1.11.23 on 2019-10-23 07:41


import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("users", "0012_auto_20190914_2209"),
    ]

    operations = [
        migrations.AlterField(
            model_name="user",
            name="discourse_url",
            field=models.TextField(
                blank=True,
                validators=[
                    django.core.validators.RegexValidator(
                        "^https://discourse\\.mozilla\\.org/u/",
                        "Enter a valid Discourse URL.",
                        "invalid",
                    )
                ],
                verbose_name="Discourse",
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="facebook_url",
            field=models.TextField(
                blank=True,
                validators=[
                    django.core.validators.RegexValidator(
                        "^https?://www\\.facebook\\.com/",
                        "Enter a valid Facebook URL.",
                        "invalid",
                    )
                ],
                verbose_name="Facebook",
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="github_url",
            field=models.TextField(
                blank=True,
                validators=[
                    django.core.validators.RegexValidator(
                        "^https?://github\\.com/",
                        "Enter a valid GitHub URL.",
                        "invalid",
                    )
                ],
                verbose_name="GitHub",
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="homepage",
            field=models.URLField(
                blank=True,
                error_messages={
                    "invalid": "This URL has an invalid format. Valid URLs look like http://example.com/my_page."
                },
                max_length=255,
                verbose_name="Homepage",
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="linkedin_url",
            field=models.TextField(
                blank=True,
                validators=[
                    django.core.validators.RegexValidator(
                        "^https?://((www|\\w\\w)\\.)?linkedin.com/((in/[^/]+/?)|(pub/[^/]+/((\\w|\\d)+/?){3}))$",
                        "Enter a valid LinkedIn URL.",
                        "invalid",
                    )
                ],
                verbose_name="LinkedIn",
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="locale",
            field=models.CharField(
                blank=True,
                choices=[
                    ("en-US", "English (US)"),
                    ("ar", "عربي"),
                    ("bg", "Български"),
                    ("bm", "Bamanankan"),
                    ("bn", "বাংলা"),
                    ("ca", "Català"),
                    ("de", "Deutsch"),
                    ("el", "Ελληνικά"),
                    ("es", "Español"),
                    ("fa", "فارسی"),
                    ("fi", "suomi"),
                    ("fr", "Français"),
                    ("he", "עברית"),
                    ("hi-IN", "हिन्दी (भारत)"),
                    ("hu", "magyar"),
                    ("id", "Bahasa Indonesia"),
                    ("it", "Italiano"),
                    ("ja", "日本語"),
                    ("kab", "Taqbaylit"),
                    ("ko", "한국어"),
                    ("ms", "Melayu"),
                    ("my", "မြန်မာဘာသာ"),
                    ("nl", "Nederlands"),
                    ("pl", "Polski"),
                    ("pt-BR", "Português (do\xa0Brasil)"),
                    ("pt-PT", "Português (Europeu)"),
                    ("ru", "Русский"),
                    ("sv-SE", "Svenska"),
                    ("th", "ไทย"),
                    ("tr", "Türkçe"),
                    ("uk", "Українська"),
                    ("vi", "Tiếng Việt"),
                    ("zh-CN", "中文 (简体)"),
                    ("zh-TW", "正體中文 (繁體)"),
                ],
                db_index=True,
                default="en-US",
                max_length=7,
                verbose_name="Language",
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="mozillians_url",
            field=models.TextField(
                blank=True,
                validators=[
                    django.core.validators.RegexValidator(
                        "^https?://mozillians\\.org/u/",
                        "Enter a valid Mozillians URL.",
                        "invalid",
                    )
                ],
                verbose_name="Mozillians",
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="stackoverflow_url",
            field=models.TextField(
                blank=True,
                validators=[
                    django.core.validators.RegexValidator(
                        "^https?://([a-z]{2}\\.)?stackoverflow\\.com/users/",
                        "Enter a valid Stack Overflow URL.",
                        "invalid",
                    )
                ],
                verbose_name="Stack Overflow",
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="timezone",
            field=models.CharField(
                blank=True, default="US/Pacific", max_length=42, verbose_name="Timezone"
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="twitter_url",
            field=models.TextField(
                blank=True,
                validators=[
                    django.core.validators.RegexValidator(
                        "^https?://twitter\\.com/",
                        "Enter a valid Twitter URL.",
                        "invalid",
                    )
                ],
                verbose_name="Twitter",
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="username",
            field=models.CharField(
                error_messages={"unique": "A user with that username already exists."},
                help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                max_length=150,
                unique=True,
                validators=[django.contrib.auth.validators.UnicodeUsernameValidator()],
                verbose_name="username",
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="website_url",
            field=models.TextField(
                blank=True,
                validators=[
                    django.core.validators.RegexValidator(
                        "^https?://", "Enter a valid website URL.", "invalid"
                    )
                ],
                verbose_name="Website",
            ),
        ),
        migrations.AlterField(
            model_name="userban",
            name="by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="bans_issued",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Banned by",
            ),
        ),
        migrations.AlterField(
            model_name="userban",
            name="is_active",
            field=models.BooleanField(default=True, help_text="(Is ban active)"),
        ),
        migrations.AlterField(
            model_name="userban",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="bans",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Banned user",
            ),
        ),
    ]
