/*
Indicators
- in a perfect world each indicator is composed of 2 classes that
  combine to indicate how it should display.
- one to indicate whether it is a block or a inline indicator
- one to indicate what colour and icons it should halve
- in practice there are multiple classes that indicate these things
  and a few indicators that only have one class to serve both purposes
********************************************************************** */


/*
block indicators aka banners
- full width, left border, optional icon
====================================================================== */

.blockIndicator,
.overheadIndicator,
.standardNoteBlock,
.inheritsbox,
.notice,
.note,
.warning,
.geckoVersionNote {
    @extend %indicator-block;

    code {
        @include set-font-size($base-font-size);
    }

    /* heading */
    p > strong {
        @extend %indicator-block-heading;
    }
}

/* heading */
.bannerHeading {
    @extend %indicator-block-heading;
}

/* Expand out the following for browsers which don’t support `:matches(…)`
   TODO: Use postcss-selector-matches once https://bugzil.la/1366868 is resolved.
   See https://github.com/mdn/kuma/pull/4884 */
.blockIndicator + .blockIndicator,
.overheadIndicator + .blockIndicator,
.note + .blockIndicator,
.notice + .blockIndicator,
.properties + .blockIndicator,
.warning + .blockIndicator,
pre + .blockIndicator,
.blockIndicator + .overheadIndicator,
.overheadIndicator + .overheadIndicator,
.note + .overheadIndicator,
.notice + .overheadIndicator,
.properties + .overheadIndicator,
.warning + .overheadIndicator,
pre + .overheadIndicator,
.blockIndicator + .note,
.overheadIndicator + .note,
.note + .note,
.notice + .note,
.properties + .note,
.warning + .note,
pre + .note,
.blockIndicator + .notice,
.overheadIndicator + .notice,
.note + .notice,
.notice + .notice,
.properties + .notice,
.warning + .notice,
pre + .notice,
.blockIndicator + .properties,
.overheadIndicator + .properties,
.note + .properties,
.notice + .properties,
.properties + .properties,
.warning + .properties,
pre + .properties,
.blockIndicator + .warning,
.overheadIndicator + .warning,
.note + .warning,
.notice + .warning,
.properties + .warning,
.warning + .warning,
pre + .warning,
.blockIndicator + p:empty + .blockIndicator,
.overheadIndicator + p:empty + .blockIndicator,
.note + p:empty + .blockIndicator,
.notice + p:empty + .blockIndicator,
.properties + p:empty + .blockIndicator,
.warning + p:empty + .blockIndicator,
pre + p:empty + .blockIndicator,
.blockIndicator + p:empty + .overheadIndicator,
.overheadIndicator + p:empty + .overheadIndicator,
.note + p:empty + .overheadIndicator,
.notice + p:empty + .overheadIndicator,
.properties + p:empty + .overheadIndicator,
.warning + p:empty + .overheadIndicator,
pre + p:empty + .overheadIndicator,
.blockIndicator + p:empty + .note,
.overheadIndicator + p:empty + .note,
.note + p:empty + .note,
.notice + p:empty + .note,
.properties + p:empty + .note,
.warning + p:empty + .note,
pre + p:empty + .note,
.blockIndicator + p:empty + .notice,
.overheadIndicator + p:empty + .notice,
.note + p:empty + .notice,
.notice + p:empty + .notice,
.properties + p:empty + .notice,
.warning + p:empty + .notice,
pre + p:empty + .notice,
.blockIndicator + p:empty + .properties,
.overheadIndicator + p:empty + .properties,
.note + p:empty + .properties,
.notice + p:empty + .properties,
.properties + p:empty + .properties,
.warning + p:empty + .properties,
pre + p:empty + .properties,
.blockIndicator + p:empty + .warning,
.overheadIndicator + p:empty + .warning,
.note + p:empty + .warning,
.notice + p:empty + .warning,
.properties + p:empty + .warning,
.warning + p:empty + .warning,
pre + p:empty + .warning {
    margin-top: ($grid-spacing * -1) + 5px;
}

/* This is needed because `<pre>` blocks with syntax highlighting have
   multiple rules with higher specificity, which set the top margin
   to `0` and can't be overriden without the use of `!important`
   or increasing the selector specificity, the latter of which
   would overcomplicate this selector even more.
   --------------------------------------------------------------
   Example: https://developer.mozilla.org/docs/Sandbox/Indicators */
.blockIndicator + pre,
.overheadIndicator + pre,
.note + pre,
.notice + pre,
.properties + pre,
.warning + pre,
pre + pre,
.blockIndicator + p:empty + pre,
.overheadIndicator + p:empty + pre,
.note + p:empty + pre,
.notice + p:empty + pre,
.properties + p:empty + pre,
.warning + p:empty + pre,
pre + p:empty + pre {
    margin-top: ($grid-spacing * -1) + 5px !important; /* stylelint-disable-line declaration-no-important */
}

/* If there are 2 indicators in close proximity, snug them up.
   Too many combinations to do them all but this
   should take care of most common combinations */
/* Commented out because of https://bugzil.la/1487656
:matches(.blockIndicator, .overheadIndicator, .note, .notice, .properties, .warning, pre) + :matches(.blockIndicator, .overheadIndicator, .note, .notice, .properties, .warning),
:matches(.blockIndicator, .overheadIndicator, .note, .notice, .properties, .warning, pre) + p:empty + :matches(.blockIndicator, .overheadIndicator, .note, .notice, .properties, .warning) {
    margin-top: ($grid-spacing * -1) + 5px;
}

:matches(.blockIndicator, .overheadIndicator, .note, .notice, .properties, .warning, pre) + pre,
:matches(.blockIndicator, .overheadIndicator, .note, .notice, .properties, .warning, pre) + p:empty + pre {
    margin-top: ($grid-spacing * -1) + 5px !important;
}
*/

/* code block looks funny without its padding,
   only appears in kumascript error boxes AFIK */
.warning pre:last-child {
    padding-bottom: $code-block-padding;
}

/* remove empty p tag between top of note and start of heading
   if text editor has inserted one  */
.geckoVersionNote {
    > p:first-child:empty {
        display: none;
    }
}


/*
modifications for 'system' indicators
- border goes all the way around, meant to indicate info is
  seperate from content
-------------------------------------------------------------- */

.draft,
.notice:not(.experimental),
.translationInProgress {
    @extend %indicator-system;
}

.warning {
    &#kserrors,
    &#doc-rendering-in-progress,
    &#doc-rendering-scheduled,
    &.warning-review {
        @extend %indicator-system;
    }
}


/*
inline indicators aka badges
- inline-block, smaller font
====================================================================== */

.inlineIndicator,
.indicatorInHeadline {
    @extend %indicator-inline;
    @extend %indicator-inline-icon;
}

.inlineIndicator[title],
.indicatorInHeadline[title] {
    cursor: help;
}


/*
inline in a heading
-------------------------------------------------------------- */

.headingWithIndicator {
    position: relative;
    @include clearfix();

    h2 {
        @include heading-2-section();

        & + .indicatorInHeadline {
            position: absolute;
            top: 6px;
            @include bidi(((right, 0, left, auto),));
        }
    }

    h3,
    h4,
    h5,
    h6 {
        @include bidi(((float, left, right),));
    }
}

.indicatorInHeadline {
    @include bidi(((float, right, left),));
}


/*
icons for both types of indicators
====================================================================== */

#kserrors.warning {
    @extend %indicator-with-icon;
    @include indicator-svg-icon($icon-white-frown);
}

#doc-rendering-in-progress.warning,
#doc-rendering-scheduled.warning {
    @include indicator-svg-icon($icon-white-clock);
}

.experimental,
.experimentalBadge {
    @include indicator-svg-icon('../general/flask.svg');
}

.inlineIndicator.experimental,
.inlineIndicator.experimentalBadge {
    @extend %indicator-with-icon;

    &:before {
        @include set-inline-icon('../general/flask.svg');
    }
}

.warning:not(.notification) {
    @include indicator-svg-icon('../notifications/exclamation-circle.svg');
}

.deprecated {
    @include indicator-svg-icon('../emojis/thumbs-down.svg');
}

.inlineIndicator.deprecated {
    @extend %indicator-with-icon;

    &:before {
        @include set-inline-icon('../emojis/thumbs-down.svg');
    }
}

.draft,
.warning.warning-review,
.translationInProgress {
    @include indicator-svg-icon('../tools/pencil.svg');
}

.note {
    @include indicator-svg-icon('../file-icons/file.svg');

    &:before {
        @include vendorize(transform, scaleY(-1) scaleX(1));
    }
}

.obsolete {
    @include indicator-svg-icon('../general/trash.svg');
}

.nonStandard,
.nonstandardBadge {
    @include indicator-svg-icon('../notifications/exclamation-triangle.svg');
}

.inlineIndicator.nonStandard,
.inlineIndicator.nonstandardBadge {
    @extend %indicator-with-icon;

    &:before {
        @include set-inline-icon('../notifications/exclamation-triangle.svg');
    }
}

.privilegedBadge,
.install {
    @include indicator-svg-icon('../general/shield.svg');
}

.secureContexts {
    @include indicator-svg-icon('../general/lock.svg');
}

/* when used in inline indicator boxes */
.inlineIndicator.secureContexts {
    &:before {
        background-size: 12px;
        margin-top: 0;
        width: 12px;
        height: 16px;
    }
}

/*
Colours for both types
====================================================================== */

/* don't use */
.warning,
.obsolete,
.obsoleteBadge,
.deprecated,
.deprecatedBadge,
.nonStandard,
.nonstandardBadge,
.unimplemented,
.unimplementedBadge {
    @extend %indicator-danger;
}

/* if you don't know this it won't work */
.warning.warning-review,
.draft,
.todo,
.note,
.notice,
.renamed,
.secureContexts,
.prefixBox,
.privilegedBadge,
.translationInProgress {
    @extend %indicator-warning;
}

/* version info */
.experimental,
.experimentalBadge,
.htmlVer,
.domLevel,
.jsMinVer,
.jsMinVerHeader,
.standardNote,
.mbMinVer,
.tbMinVer,
.smMinVerHeader,
.notXPCOM,
.mobileOnly,
.projectSpecific, /* single use, might be able to remove */
.geckoVersionNote,
.geckoMinVer,
.geckoMinVerMethod,
.firefoxVersionBadge,
.geckoVersionBadge {
    @extend %indicator-version;
}

/* you might like to know */
.template-jsOverrides,
.optional {
    @extend %indicator-info;
}

/*
Indicator colour overrides
-------------------------------------------------------------- */
.indicator-info {
    @extend %indicator-info;
}

.indicator-version {
    @extend %indicator-version;
}

.indicator-warning {
    @extend %indicator-warning;
}

.indicator-danger {
    @extend %indicator-danger;
}

/*
Special snowflakes
-------------------------------------------------------------- */

/* kumascript warnings get brigther red */
#kserrors.warning,
#doc-rendering-in-progress.warning,
#doc-rendering-scheduled.warning {
    border-color: #{map-get( map-get($colors-lookup, 'negative'), 'dark')};
    background-color: #{map-get( map-get($colors-lookup, 'negative'), 'dark')};
    @extend %indicator-link-invert;
    @extend %indicator-text-invert;
}

/* code colouration */
.inheritsbox {
    border-color: $code-block-border-color;
    background: $code-block-background-alt-color;
}

/* bright red */
.noscript {
    border-color: #f20000;
    background: #f00;
    @extend %indicator-text-invert;
    @extend %indicator-link-invert;
}

/* black */
.readOnly {
    border-color: #4b4b4b;
    background: #595959;
}

/* heading that goes in with geckoVersionNote */
.geckoVersionHeading {
    margin: (($grid-spacing / 2) * -1) (($grid-spacing / 2) * -1) 4px;
    padding: $content-vertical-spacing $content-horizontal-spacing;
    background: -theme-pale-medium($blue);
    @extend %indicator-block-heading;

    > div {
        font-family: $tiny-font-family;
    }
}
