worker: &worker
  image: quay.io/mozmar/kuma_base
  command: ./manage.py celery worker --events --beat --autoreload --concurrency=4 -Q mdn_purgeable,mdn_search,mdn_emails,mdn_wiki,celery
  volumes:
    - ./:/app
  links:
    - memcached
    - mysql
    #- elasticsearch
    - redis
  environment:
    # Django settings overrides:
    #- DEBUG=True
    - PROTOCOL=http://
    - DOMAIN=localhost
    - DATABASE_URL=mysql://root:kuma@mysql:3306/developer_mozilla_org
    - MEMCACHE_SERVERS=memcached:11211
    - ALLOWED_HOSTS=localhost,localhost:8000
    - BROKER_URL=redis://redis:6379/0
    - CELERY_ALWAYS_EAGER=false
    # TODO: switch to non-root user
    - C_FORCE_ROOT=1
    #- ES_URLS=elasticsearch:9200
    # Other environment variables:
    - PYTHONDONTWRITEBYTECODE=1
    - PROD_DETAILS_DIR=/app/product_details_json

# Web is based on worker b/c you cannot clear the "ports" with docker-compose.
web:
  <<: *worker
  command: gunicorn -w 4 --bind 0.0.0.0:8000 --timeout=120 kuma.wsgi:application
  ports:
    - "8000:8000"

#nginx:
#  build: ./docker/images/nginx
#  volumes:
#    - ./static:/app/static
#  ports:
#    - "80:80"
#  links:
#    - web

memcached:
  image: memcached

# TODO: determine if this data container is actually useful
mysql-data:
  build: ./docker/images/mysql-data
  volumes:
    - /var/lib/mysql

mysql:
  build: ./docker/images/mysql
  environment:
    - MYSQL_USER=kuma
    - MYSQL_PASSWORD=kuma
    - MYSQL_DATABASE=developer_mozilla_org
  volumes_from:
    - mysql-data

#elasticsearch:
#  image: elasticsearch:1.7

redis:
  image: redis

kumascript:
  image: quay.io/mozmar/kumascript
  command: node run.js
  links:
    - web
  ports:
    - "9080:9080"
