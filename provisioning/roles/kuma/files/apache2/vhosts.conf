Listen 8080

<VirtualHost *:80>
	RewriteEngine On
	RewriteCond %{HTTPS} off
	RewriteRule (.*) https://%{HTTP_HOST}%{REQUEST_URI}
</VirtualHost>

<VirtualHost *:443>
    SSLEngine on
    SSLCertificateFile /etc/apache2/ssl/apache.crt
    SSLCertificateKeyFile /etc/apache2/ssl/apache.key

    SetEnv HTTPS on
    RequestHeader set X-Forwarded-Proto "https"

    ServerName developer-local.allizom.org
    ServerAlias mdn-local.mozillademos.org

    DirectoryIndex index.html
    Options -Indexes
    RewriteEngine On

    DocumentRoot /var/www

    <Directory "/var/www">
        Options All
        AllowOverride All
        Require all granted
    </Directory>

    Alias /media/ "/home/vagrant/src/media/"

    <Directory "/home/vagrant/src/media">
        Options All
        AllowOverride All
        Require all granted
    </Directory>

    Alias /uploads/ "/home/vagrant/uploads/"

    <Directory "/home/vagrant/uploads">
        Options All
        AllowOverride All
        Require all granted
    </Directory>

    # This runs the python app from port 8000, which must be started manually
    # eg. /home/vagrant/kuma-venv/bin/python /home/vagrant/src/manage.py runserver 0.0.0.0:8000
    TimeOut 600
    ProxyTimeout 600
    ProxyPass /mwsgi http://localhost:8000 retry=1
    ProxyPassReverse /mwsgi http://localhost:8000

    # Proxy to reach elasticsearch
    ProxyPass /elastic http://localhost:9200
    ProxyPassReverse /elastic http://localhost:9200

    # Redirect outdated hotlinks and hardcoded paths in content
    RewriteRule ^/media/(redesign/)?css/(.*)-min.css$ /static/build/styles/$2.css [L,R=301]
    RewriteRule ^/media/(redesign/)?js/(.*)-min.js$ /static/build/js/$2.js [L,R=301]
    RewriteRule ^/media/(redesign/)?img(.*) /static/img$2 [L,R=301]
    RewriteRule ^/media/(redesign/)?css(.*) /static/css$2 [L,R=301]
    RewriteRule ^/media/(redesign/)?js(.*) /static/js$2 [L,R=301]
    RewriteRule ^/media/(redesign/)?fonts(.*) /static/fonts$2 [L,R=301]

    # Proxy any requests for non-existent resources under /media/uploads to the
    # production site. That way, we don't need an export of files from prod for
    # references in a DB export from prod.
    #
    # FIXME: This is broken right now, because production forbids any referers
    # not from production for media assets. A referer-blocker addon might work
    SSLProxyEngine on
    RewriteCond /home/vagrant/src%{REQUEST_FILENAME} !-f
    RewriteCond /home/vagrant/src%{REQUEST_FILENAME} !-d
    RewriteCond %{REQUEST_URI} /media/uploads/
    RewriteRule ^/media/uploads/(.*)$ https://developer.mozilla.org/media/uploads/$1 [P,L]
</VirtualHost>
