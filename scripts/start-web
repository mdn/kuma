#!/bin/bash
# set -e  # Exit on non-zero status
set -u  # Treat unset variables as an error

# The rationale for this is that this script is meant for starting the a
# service in docker-compose. The last line should be a thing that runs
# indefinitely.
# But throughout there are other checks and balances we want to make but
# in making them, if anything goes wrong, we swallow that exit and
# print something verbose instead. Doing this prevents the chicken-and-egg
# problem in that you probably need the docker-compose service to start
# so that you can address the problems at all.

function make_stink {
    eval $@ && exit 0
    exit_code=$?

    >&2 echo ""
    >&2 echo "^^^^  WARNING!  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"
    >&2 echo ""
    >&2 echo -n "  Command that failed: "
    >&2 echo $@
    >&2 echo -n "  Command exit code:   "
    >&2 echo $exit_code
    >&2 echo ""
    >&2 echo "  See above for the error/warning. "
    >&2 echo "  Note! The rest of the script will carry to make sure the service starts"
    >&2 echo ""
    >&2 echo "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"
    >&2 echo ""
    >&2 echo ""
}


# Running this kill two birds with one stone: run the system checks and
# actually perform any outstanding ORM migrations.
make_stink ./manage.py migrate

# Actually start the Gunicorn server
gunicorn -w ${GUNICORN_WORKERS:-4} --bind 0.0.0.0:8000 --access-logfile=- --timeout=120 --worker-class=meinheld.gmeinheld.MeinheldWorker kuma.wsgi:application
