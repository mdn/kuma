@import 'vars'

/*

  This Stylus file provides man mixins for use within the MDN theme.

*/

/* generates a grid based on min/max and increment */
generate-grid(increment, start, end, desired-column=false)
  total = start
  for n, x in 0..((end - start) / increment)
    if desired-column
      if x+1 is desired-column
        return total
    else
      .column-{x+1}
        width total

    total = total + increment

  /* now add a few meaningful names */
  .column-strip
    @extend .column-3
  .column-main
    @extend .column-9
  .column-half
    @extend .column-6
  .column-all
    width auto

get-grid-dimension(media-query, column-num)
  if media-query is media-query-tablet
    return generate-grid(grid-increment-tablet, grid-start-tablet, grid-end-tablet, column-num)

/* vendorizes a propery */
vendorize(property, value)
  -webkit-{property} value
  -moz-{property} value
  -ms-{property} value
  {property} value

vendorize-value(property, value, more='')
  {property} unquote('-webkit-'+value+more)
  {property} unquote('-moz-'+value+more)
  {property} unquote('-ms-'+value+more)
  {property} value+more

/* prevents spacing of a given element if it's the last child */
prevent-last-child-spacing(element='*', property='padding')
  & {element}:last-child
    {property} 0

/* text-decoration none, hover text-decoration underline */
reverse-link-decoration()
  a
    text-decoration none
    &:hover, &:active, &:focus
      text-decoration underline

/* generates a background property for header and zones */
create-gradient-background(color='', use-gradient=false)
  if use-gradient
    background-image url('/media/redesign/img/header-background.png'), url('/media/redesign/img/mdn-header-gradient.png')
    background-repeat repeat, repeat-x
  else
    background-image url('/media/redesign/img/header-background.png')
    background-repeat repeat
  background-position 0 0, 0 0, 0 0
  if color
    background-color color

create-home-gradient-background(color)
  create-gradient-background(color)
  background-image url('/media/redesign/img/header-background.png'), url('/media/redesign/img/blueprint.png'), url('/media/redesign/img/mdn-header-gradient.png')
  background-repeat repeat, repeat, repeat-x

/* generates a cross-browser gradient */
create-gradient(start-color, end-color, direction=false)
  if direction
    vendorize-value(background, linear-gradient, '(' + direction + ', ' + start-color + ', ' + end-color + ')')
  else
    vendorize-value(background, linear-gradient, '(' + start-color + ', ' + end-color + ')')
  filter unquote("progid:DXImageTransform.Microsoft.gradient(startColorstr='" + start-color + "', endColorstr='" + end-color + "', GradientType=1)") /* IE6-9 */

/* generates the essential "before" and "after" code for pseudo-arrows */
generate-arrow()
  &:before, &:after
    content ' '
    height 0
    position absolute
    width 0
    border 10px solid transparent

/* generates the center property */
generate-center(media-width)
  .center
    width (media-width - 2 * gutter-width)
    padding 0 gutter-width

/* use this in the case of having to override styles from old template :( */
compat-important(prop, value)
  {prop}: value !important

/* Used for style which are only present to override other styles -- these will be deleted once legacy design is gone */
compat-only(prop, value, more-selector='')
  compat-important(prop, value)

  if more-selector
    & {more-selector}
      compat-important(prop, value)

/* Used to denote an old IE style */
old-ie(prop, value, important=false)
  {prop} value (important ? unquote('!important') : '')

/* Used to create sliding animations */
slider(duration=animation-duration, maximum-height=10000px)
  overflow-y hidden
  max-height maximum-height
  vendorize(transition-property, all)
  vendorize(transition-duration, duration)
  vendorize(transition-timing-function, slide-timing-function)

  &.closed
    max-height 0

/* Sets the base styles for messages (review, warning, error, notice, etc.) */
set-message-base()
  compat-only(border-width, 5px)
  compat-only(border-style, solid)
  padding (grid-spacing / 2)
  margin-bottom grid-spacing
  font-size smaller-font-size

  & *:last-child
    margin-bottom 0
    padding-bottom 0

/* Enables the TOC toggle for small screens */
enable-toc-toggle()
  #toc
    padding (grid-spacing / 2) grid-spacing

    .toggler
      pointer-events auto
      color link-color

      i
        display inline-block

/* removes the implied "<main>" spacing so page is more customizable */
remove-main-spacing()
  main > .center
    width auto
    padding 0

/* Overrides the navigation menu color - zones and homepage */
override-main-nav-color(hex)
  #main-nav > ul > li > a, .user-state a
    compat-important(color, hex)

/* Sets an input tag's placeholder styles */
set-placeholder-style(prop, value)
  &::-webkit-input-placeholder
    {prop} value
  &::-moz-input-placeholder
    {prop} value


/*
  CLASSES TO BE EXTENDED BY OTHER CLASSES

  These are very "general" and non-specific on purpose
  There's a good chance these classes wont be used directly in HTML
*/
.clear
  &:before, &:after
    content "\0020"
    display block
    height 0
    overflow hidden

  &:after
    clear both

.offscreen
  position absolute
  left -99999px
  
.text-offscreen
  text-indent -9999px
  overflow hidden

.title
  font-weight bold
  text-transform uppercase
  color text-color
  text-decoration none
  display block

.smaller
  font-size smaller-font-size

.larger
  font-size larger-font-size

.hidden
  display none

.grid-padding
  padding grid-spacing

.disabled
  pointer-events none
  cursor default

.reset-font
  font-family site-font-family

.heading-1
  font-size 48px
  letter-spacing -2px

.heading-2
  font-size 32px
  letter-spacing -1px

.button
  text-decoration none
  display inline-block
  compat-important(background-color, button-background)
  compat-important(color, button-color)
  compat-important(text-transform, uppercase)
  compat-important(padding, 5px 11px)
  compat-important(border-radius, 4px)
  vendorize(box-shadow, inset 0 -1px button-shadow-color)
  compat-only(background-image, none)
  compat-only(font-family, site-font-family)
  compat-only(font-size, base-font-size)
  compat-only(letter-spacing, normal)

  &.only-icon
    {selector-icon}
      margin-left 0
      margin-top -1px

    span
      @extend .offscreen

  &.neutral
    compat-important(color, #fff)
    compat-important(background-color, #0095dd)
    vendorize(box-shadow, inset 0 -1px #00539f)

  &.negative
    compat-important(color, #fff)
    compat-important(background-color, #ea3b28)
    vendorize(box-shadow, inset 0 -1px #c13832)

  &.positive
    compat-important(color, #fff)
    compat-important(background-color, #70a300)
    vendorize(box-shadow, inset 0 -1px #486900)